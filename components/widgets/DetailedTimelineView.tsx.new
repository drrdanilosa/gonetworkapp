import React from 'react'
import { DetailedTimelineViewProps, TimelineItem } from '@/types'

const DetailedTimelineView: React.FC<DetailedTimelineViewProps> = ({
  items,
  loading = false,
  onItemClick,
  onLoadMore,
  hasMore = false
}) => {
  const handleItemClick = (item: TimelineItem) => {
    if (onItemClick) {
      onItemClick(item)
    }
  }

  const handleLoadMore = () => {
    if (onLoadMore && hasMore && !loading) {
      onLoadMore()
    }
  }

  if (loading && items.length === 0) {
    return (
      <div className="flex justify-center items-center p-8">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    )
  }

  return (
    <div className="detailed-timeline-view">
      <div className="timeline-items">
        {items.map((item) => (
          <div
            key={item.id}
            className="timeline-item p-4 border-b cursor-pointer hover:bg-gray-50"
            onClick={() => handleItemClick(item)} >
            <div className="flex justify-between items-start">
              <div className="flex-1">
                <h3 className="font-semibold text-lg">{item.title}</h3>
                {item.description && (
                  <p className="text-gray-600 mt-1">{item.description}</p>
                )}
                <div className="flex items-center gap-2 mt-2">
                  <span className="text-sm text-gray-500">
                    {new Date(item.timestamp).toLocaleString()}
                  </span>
                  <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(item.status)}`}>
                    {item.status}
                  </span>
                  <span className="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">
                    {item.type}
                  </span>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      {hasMore && (
        <div className="text-center p-4">
          <button
            onClick={handleLoadMore}
            disabled={loading}
            className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50"
          >
            {loading ? 'Carregando...' : 'Carregar mais'}
          </button>
        </div>
      )}
    </div>
  )
}

function getStatusColor(status: string): string {
  switch (status) {
    case 'pendente':
      return 'bg-yellow-100 text-yellow-800'
    case 'em-andamento':
    case 'em-revisao':
      return 'bg-blue-100 text-blue-800'
    case 'concluido':
    case 'aprovado':
      return 'bg-green-100 text-green-800'
    case 'cancelado':
    case 'rejeitado':
      return 'bg-red-100 text-red-800'
    default:
      return 'bg-gray-100 text-gray-800'
  }
}

export default DetailedTimelineView
